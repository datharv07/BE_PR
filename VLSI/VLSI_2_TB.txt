library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity UniversalShiftRegister_tb is
end UniversalShiftRegister_tb;

architecture Behavioral of UniversalShiftRegister_tb is

    signal clk       : STD_LOGIC := '0';
    signal rst       : STD_LOGIC := '0';
    signal mode      : STD_LOGIC_VECTOR(1 downto 0);
    signal data_in   : STD_LOGIC_VECTOR(3 downto 0);
    signal serial_in : STD_LOGIC;
    signal q         : STD_LOGIC_VECTOR(3 downto 0);

    component UniversalShiftRegister
        Port (
            clk       : in  STD_LOGIC;
            rst       : in  STD_LOGIC;
            mode      : in  STD_LOGIC_VECTOR(1 downto 0);
            data_in   : in  STD_LOGIC_VECTOR(3 downto 0);
            serial_in : in  STD_LOGIC;
            q         : out STD_LOGIC_VECTOR(3 downto 0)
        );
    end component;

begin

    uut: UniversalShiftRegister
        Port map (
            clk       => clk,
            rst       => rst,
            mode      => mode,
            data_in   => data_in,
            serial_in => serial_in,
            q         => q
        );

    clk_process: process
    begin
        clk <= '0';
        wait for 10 ns;
        clk <= '1';
        wait for 10 ns;
    end process;

    test_process: process
    begin
        rst <= '1';
        wait for 20 ns;
        rst <= '0';

        mode <= "11";
        data_in <= "1010";
        wait for 20 ns;

        mode <= "00";
        wait for 20 ns;

        mode <= "01";
        serial_in <= '1';
        wait for 20 ns;

        mode <= "10";
        serial_in <= '0';
        wait for 20 ns;

        mode <= "01";
        serial_in <= '0';
        wait for 20 ns;

        mode <= "10";
        serial_in <= '1';
        wait for 20 ns;

        wait;
    end process;

end Behavioral;
